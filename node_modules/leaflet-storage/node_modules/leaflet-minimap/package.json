{
  "name": "leaflet-minimap",
  "version": "1.0.0",
  "author": {
    "name": "Norkart AS"
  },
  "description": "A plugin for Leaflet that provides a minimap in the corner of the map view.",
  "license": "BSD-2-Clause",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/Norkart/Leaflet-MiniMap.git"
  },
  "homepage": "https://github.com/Norkart/Leaflet-MiniMap",
  "bugs": {
    "url": "https://github.com/Norkart/Leaflet-MiniMap/issues"
  },
  "dependencies": {
    "leaflet": ">=0.5.0"
  },
  "keywords": [
    "maps",
    "leaflet",
    "client",
    "minimap"
  ],
  "readme": "# Leaflet.MiniMap\n\nLeaflet.MiniMap is a simple minimap control that you can drop into your leaflet map, and it will create a small map in the corner which shows the same as the main map with a set zoom offset. (By default it is -5.)\n\n## Using the MiniMap control\n\nThe control can be inserted in two lines: First you have to construct a layer for it to use, and then you create and attach the minimap control. (Don't reuse the layer you added to the main map, strange behaviour will ensue...)\n\nFrom the [example](http://norkart.github.com/Leaflet-MiniMap/example.html):\n    \n    var osm2 = new L.TileLayer(osmUrl, {minZoom: 0, maxZoom: 13, attribution: osmAttrib});\n    var miniMap = new L.Control.MiniMap(osm2).addTo(map);\n\nAs the minimap control inherits from leaflet's control, positioning is handled automatically by leaflet. However, you can still style the minimap and set its size by modifying the css file.\n\n**Note:** Leaflet version 0.5 or higher is required.\n\n## Available Options\n The mini map uses options which can be set in the same way as other leaflet options, and these are the available options:\n\n`position:` The standard Leaflet.Control position parameter, used like all the other controls. Defaults to 'bottomright'.\n\n`width:` The width of the minimap in pixels. Defaults to 150.\n\n`height:` The height of the minimap in pixels. Defaults to 150.\n\n`zoomLevelOffset:` The offset applied to the zoom in the minimap compared to the zoom of the main map. Can be positive or negative, defaults to -5.\n\n`zoomLevelFixed:` Overrides the offset to apply a fixed zoom level to the minimap regardless of the main map zoom. Set it to any valid zoom level, if unset `zoomLevelOffset` is used instead.\n\n`zoomAnimation:` Sets whether the minimap should have an animated zoom. (Will cause it to lag a bit after the movement of the main map.) Defaults to false.\n\n`toggleDisplay:` Sets whether the minimap should have a button to minimise it. Defaults to false. \n\n`autoToggleDisplay:` Sets whether the minimap should hide automatically if the parent map bounds does not fit within the minimap bounds. Especially useful when 'zoomLevelFixed' is set.\n\n`aimingRectOptions:` Sets the style of the aiming rectangle by passing in a [Path.Options object](http://leafletjs.com/reference.html#path-options). (Clickable will always be overridden and set to false.)\n\n`shadowRectOptions:` Sets the style of the aiming shadow rectangle by passing in a [Path.Options object](http://leafletjs.com/reference.html#path-options). (Clickable will always be overridden and set to false.)\n\n###Translation strings\n\nThese are not passed as options, but are overridden in a subclass. To do general translation overrides take a look at the german example sourcefile.\n\n`hideText:` Text-String to be displayed as Tooltip when hovering over the toggle button on the MiniMap and it is visible. \n\n`showText:` Text-String to be displayed as Tooltip when hovering over the toggle button on the MiniMap and it is hidden.\n",
  "_id": "leaflet-minimap@1.0.0",
  "dist": {
    "shasum": "a10057eec7fa92a2a6c3206df313d4f7074ed1d8"
  },
  "_resolved": "git+https://github.com/Norkart/Leaflet-MiniMap.git#b8130dce598692736c6ca305047d5c74570fbf13",
  "_from": "minimap@git+https://github.com/Norkart/Leaflet-MiniMap.git#v1.0.0"
}
